diff --git a/.vscode/settings.json b/.vscode/settings.json
index 5582388..95ee468 100644
--- a/.vscode/settings.json
+++ b/.vscode/settings.json
@@ -66,7 +66,7 @@
       }
     },
     "explorer.confirmDelete": false,
-    "window.zoomLevel": -1,
+    "window.zoomLevel": 0,
     "git.confirmSync": false,
     "[typescriptreact]": {
       "editor.defaultFormatter": "vscode.typescript-language-features"
@@ -152,7 +152,10 @@
     "prettier.singleQuote": true,
     "[javascript]": {
       "editor.defaultFormatter": "vscode.typescript-language-features"
-    } //使用带引号替代双引号
+    },
+    "cSpell.words": [
+      "minlength"
+    ] //使用带引号替代双引号
     // "fileheader.customMade": {
     //   "description": "",
     //   "author": "zack",
diff --git a/src/app/details/details.component.html b/src/app/details/details.component.html
index cbdafa0..35cefa6 100644
--- a/src/app/details/details.component.html
+++ b/src/app/details/details.component.html
@@ -1,30 +1,32 @@
-<div class="list" *ngIf="isExist()">
+<div class="list" *ngIf="userInfo; else noData">
   <div class="container">
     <table class="table">
       <tr>
         <th>姓名：</th>
-        <td>{{obj.name}}</td>
+        <td>{{userInfo.name}}</td>
       </tr>
       <tr>
         <th>年龄：</th>
-        <td>{{obj.age}}</td>
+        <td>{{userInfo.age}}</td>
       </tr>
       <tr>
         <th>性别：</th>
-        <td>{{obj.sex}}</td>
+        <td>{{userInfo.sex}}</td>
       </tr>
       <tr>
         <th>手机号：</th>
-        <td>{{obj.tel}}</td>
+        <td>{{userInfo.tel}}</td>
       </tr>
       <tr>
         <th>家庭住址：</th>
-        <td>{{obj.address}}</td>
+        <td>{{userInfo.address}}</td>
       </tr>
     </table>
     <button routerLink="/edit">编辑</button>
   </div>
 </div>
-<div class="no-list" *ngIf="!isExist()">
-  暂无个人信息，<a href="#" routerLink="/edit">点击</a>前往添加
-</div>
+<ng-template #noData>
+  <div class="no-list">
+    暂无个人信息，<a href="#" routerLink="/edit">点击</a>前往添加
+  </div>
+</ng-template>
diff --git a/src/app/details/details.component.less b/src/app/details/details.component.less
index 372f21f..e13c1d3 100644
--- a/src/app/details/details.component.less
+++ b/src/app/details/details.component.less
@@ -16,11 +16,11 @@
 //  }
 //}
 //
-//.no-list {
-//  width: 300px;
-//  margin: 250px auto;
-//  padding-left: 90px;
-//}
+.no-list {
+ width: 300px;
+ margin: 250px auto;
+ padding-left: 90px;
+}
 //
 //textarea {
 //  width: 147px;
diff --git a/src/app/details/details.component.ts b/src/app/details/details.component.ts
index f30e8e5..02171ac 100644
--- a/src/app/details/details.component.ts
+++ b/src/app/details/details.component.ts
@@ -1,6 +1,6 @@
 import { Component, OnInit } from '@angular/core';
-import { UserService } from '../user.service';
 import { UserInfo } from '../user.model';
+import { UserService } from '../user.service';
 
 @Component({
   selector: 'app-details',
@@ -8,22 +8,11 @@ import { UserInfo } from '../user.model';
   templateUrl: './details.component.html',
 })
 export class DetailsComponent implements OnInit {
-  public obj = new UserInfo();
+  public userInfo = new UserInfo();
 
-  constructor(public userDetail: UserService) { }
+  constructor(public userService: UserService) { }
 
   public ngOnInit(): void {
-    this.userDetail.getUser();
-    this.obj = this.userDetail.obj;
-    this.userDetail.isNull(this.obj);
-  }
-
-  public isExist(): boolean {
-    for (const key in this.obj) {
-      if (this.obj[key]) {
-        return true;
-      }
-    }
-    return false;
+    this.userInfo = this.userService.getUser();
   }
 }
diff --git a/src/app/edit/edit.component.ts b/src/app/edit/edit.component.ts
index 4660b62..f14c69e 100644
--- a/src/app/edit/edit.component.ts
+++ b/src/app/edit/edit.component.ts
@@ -1,8 +1,8 @@
-import {Component, OnInit} from '@angular/core';
-import {UserService} from '../user.service';
-import {UserInfo} from '../user.model';
-import {Router, ActivatedRoute} from '@angular/router';
-import {ValidateHelper} from '../utils/validate-helper';
+import { Component, OnInit } from '@angular/core';
+import { Router, ActivatedRoute } from '@angular/router';
+import { UserInfo } from '../user.model';
+import { UserService } from '../user.service';
+import { validateHelper, ValidateHelper } from '../utils/validate-helper';
 
 @Component({
   selector: 'app-edit',
@@ -11,44 +11,32 @@ import {ValidateHelper} from '../utils/validate-helper';
 })
 export class EditComponent implements OnInit {
 
-  public obj = new UserInfo();
+  public userInfo = new UserInfo();
   public sexArray = ['男', '女'];
-  public ValidateHelper = new ValidateHelper();
 
-  constructor(public userEdit: UserService,
-              private router: Router,
-              private route: ActivatedRoute) {
+  constructor(public userService: UserService, private router: Router, private route: ActivatedRoute) {
   }
 
   public ngOnInit(): void {
-    this.getUserInfo();
-    this.userEdit.isNull(this.obj);
+    this.userInfo = this.userService.getUser();
   }
 
   public onSetEditFormSubmit(): void {
-    if (this.checkParamsValid(this.obj)) {
-      this.userEdit.setUser(this.obj);
-      this.router.navigate(['/details'], {relativeTo: this.route});
+    if (this.checkParamsValid(this.userInfo)) {
+      this.userService.saveUser(this.userInfo);
+      this.router.navigate(['/details'], { relativeTo: this.route });
     }
   }
 
   private checkParamsValid(obj: any): boolean {
-    if (!this.ValidateHelper.isTelephone(obj.tel)) {
+    if (!ValidateHelper.IsTelephone(obj.tel)) {
       alert('请输入正确手机号');
       return false;
     }
-    if (!this.ValidateHelper.isNumber(obj.age)) {
+    if (!validateHelper.isNumber(obj.age)) {
       alert('请输入正确年龄');
       return false;
     }
     return true;
   }
-
-  private getUserInfo(): void {
-    this.userEdit.getUser();
-    this.obj = this.userEdit.obj;
-  }
 }
-
-
-
diff --git a/src/app/user.service.ts b/src/app/user.service.ts
index 31c3c02..a573082 100644
--- a/src/app/user.service.ts
+++ b/src/app/user.service.ts
@@ -1,37 +1,62 @@
 import { Injectable } from '@angular/core';
 import { UserInfo } from './user.model';
 
+const USER_INFO_KEY = 'user_service_info';
+
 @Injectable({
   providedIn: 'root',
 })
 export class UserService {
 
-  public obj = new UserInfo();
+  // private obj = new UserInfo();
 
-  // 向本地存数据
-  public setUser(obj: any): void {
-    for (const key in obj) {
-      if (key) {
-        localStorage.setItem(key, obj[key]);
-      }
-    }
-  }
+  // // 向本地存数据
+  // public setUser(obj: any): void {
+  //   for (const key in obj) {
+  //     if (key) {
+  //       localStorage.setItem(key, obj[key]);
+  //     }
+  //   }
+  // }
 
-  // 从本地获取数据
-  public getUser(): void {
-    for (const key in this.obj) {
-      if (key) {
-        this.obj[key] = localStorage.getItem(key);
-      }
+  // // 从本地获取数据
+  // public getUser(): UserInfo {
+  //   for (const key in this.obj) {
+  //     if (key) {
+  //       const tmp = localStorage.getItem(key);
+  //       this.obj[key] = (tmp === 'null' || tmp === 'undefined') ? '' : tmp;
+  //     }
+  //   }
+  //   return this.obj;
+  // }
+
+  public saveUser(obj: UserInfo): void {
+    if (obj) {
+      localStorage.setItem(USER_INFO_KEY, JSON.stringify(obj));
     }
   }
 
-  // 判断若返回null或undefined则显示为空
-  public isNull(obj: any): void {
-    for (const key in obj) {
-      if (obj[key] === 'null' || obj[key] === 'undefined') {
-        obj[key] = '';
-      }
+  public getUser(): UserInfo {
+    const tmp = localStorage.getItem(USER_INFO_KEY);
+    if (tmp) {
+      const obj = JSON.parse(tmp);
+      const item = new UserInfo();
+      item.name = obj.name ? obj.name : '';
+      item.age = obj.age ? obj.age : '';
+      item.sex = obj.sex ? obj.sex : '';
+      item.tel = obj.tel ? obj.tel : '';
+      item.address = obj.address ? obj.address : '';
+      return item;
     }
+    return null;
   }
+
+  // // 判断若返回null或undefined则显示为空
+  // public isNull(obj: any): void {
+  //   for (const key in obj) {
+  //     if (obj[key] === 'null' || obj[key] === 'undefined') {
+  //       obj[key] = '';
+  //     }
+  //   }
+  // }
 }
diff --git a/src/app/utils/validate-helper.ts b/src/app/utils/validate-helper.ts
index 2dd2365..8140856 100644
--- a/src/app/utils/validate-helper.ts
+++ b/src/app/utils/validate-helper.ts
@@ -4,7 +4,7 @@ export class ValidateHelper {
    * @param tel 电话号码
    * @returns boolean
    */
-  public isTelephone(tel: string): boolean {
+  public static IsTelephone(tel: string): boolean {
     if (!(/^1[34578]\d{9}$/.test(tel))) {
       tel = '';
       return false;
@@ -28,3 +28,5 @@ export class ValidateHelper {
     }
   }
 }
+
+export const validateHelper = new ValidateHelper();
diff --git a/tslint.json b/tslint.json
index 67f538f..76ec4a3 100644
--- a/tslint.json
+++ b/tslint.json
@@ -1,14 +1,9 @@
 {
   "extends": "tslint:recommended",
-  "rulesDirectory": [
-    "codelyzer"
-  ],
+  "rulesDirectory": ["codelyzer"],
   "rules": {
     "align": {
-      "options": [
-        "parameters",
-        "statements"
-      ]
+      "options": ["parameters", "statements"]
     },
     "object-literal-sort-keys": false,
     "array-type": false,
@@ -17,22 +12,15 @@
     "deprecation": {
       "severity": "warning"
     },
+    "ordered-imports": false,
     "eofline": true,
-    "import-blacklist": [
-      true,
-      "rxjs/Rx"
-    ],
+    "import-blacklist": [true, "rxjs/Rx"],
     "import-spacing": true,
     "indent": {
-      "options": [
-        "spaces"
-      ]
+      "options": ["spaces"]
     },
     "max-classes-per-file": false,
-    "max-line-length": [
-      true,
-      140
-    ],
+    "max-line-length": [true, 140],
     "member-ordering": [
       true,
       {
@@ -44,35 +32,17 @@
         ]
       }
     ],
-    "no-console": [
-      true,
-      "debug",
-      "info",
-      "time",
-      "timeEnd",
-      "trace"
-    ],
+    "no-console": [true, "debug", "info", "time", "timeEnd", "trace"],
     "no-empty": false,
-    "no-inferrable-types": [
-      true,
-      "ignore-params"
-    ],
+    "no-inferrable-types": [true, "ignore-params"],
     "no-non-null-assertion": true,
     "no-redundant-jsdoc": true,
     "no-switch-case-fall-through": true,
     "no-var-requires": false,
-    "object-literal-key-quotes": [
-      true,
-      "as-needed"
-    ],
-    "quotemark": [
-      true,
-      "single"
-    ],
+    "object-literal-key-quotes": [true, "as-needed"],
+    "quotemark": [true, "single"],
     "semicolon": {
-      "options": [
-        "always"
-      ]
+      "options": ["always"]
     },
     "space-before-function-paren": {
       "options": {
@@ -83,10 +53,7 @@
         "named": "never"
       }
     },
-    "typedef": [
-      true,
-      "call-signature"
-    ],
+    "typedef": [true, "call-signature"],
     "typedef-whitespace": {
       "options": [
         {
@@ -106,11 +73,7 @@
       ]
     },
     "variable-name": {
-      "options": [
-        "ban-keywords",
-        "check-format",
-        "allow-pascal-case"
-      ]
+      "options": ["ban-keywords", "check-format", "allow-pascal-case"]
     },
     "whitespace": {
       "options": [
@@ -137,17 +100,7 @@
     "template-no-negated-async": true,
     "use-lifecycle-interface": true,
     "use-pipe-transform-interface": true,
-    "directive-selector": [
-      true,
-      "attribute",
-      "app",
-      "camelCase"
-    ],
-    "component-selector": [
-      true,
-      "element",
-      "app",
-      "kebab-case"
-    ]
+    "directive-selector": [true, "attribute", "app", "camelCase"],
+    "component-selector": [true, "element", "app", "kebab-case"]
   }
 }
